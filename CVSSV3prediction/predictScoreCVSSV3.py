# Software is free software released under the "GNU General Public License v3.0"
# Copyright (c) 2021 Yuning-Jiang - yuning.jiang17@gmail.com

import argparse
import os
import sys
import pandas as pd
from os import listdir
from os.path import isfile, join
from calculateCVSSV3 import calculate_baseScore
from calculateCVSSV3 import get_CVSSV3_Vector

# Init various variables :-)
getDoc = ""
#getText = ""
assignScore = ""
assignVector = ""

# Create the parser
my_parser = argparse.ArgumentParser(description='List the content of a folder')

# Add the arguments
my_parser.add_argument('-p',
                       metavar='path',
                       type=str,
                       required=True,
                       help='the path to the documents that would be assessed')
#my_parser.add_argument('-t',
                       #metavar='text',
                       #type=str,
                       #help='directly provide the text that would be assessed')
my_parser.add_argument('-s',
                       metavar='score',
                       default=False,
                       help='generate CVSS v3 scores for the assessed document(s)')
my_parser.add_argument('-v',
                       metavar='vector',
                       default=False,
                       help='generate CVSS v3 vectors for the assessed document(s)')
# Execute parse_args()
args = my_parser.parse_args()
getDoc = args.p
#getText = args.t
assignScore = args.s
assignVector = args.v

if getDoc:
    if not os.path.isdir(getDoc):
        print('The path specified does not exist')
        sys.exit()
    else:
        files = [f for f in listdir(getDoc) if isfile(join(getDoc, f))]
        for file in files:
            df = pd.read_csv(getDoc + '/' + file)
            docs=df['Report'].tolist()
            for i in range(0,len(df)):
                print("The document being analysed is: " + docs[i])
                if assignScore:
                    pred_score = calculate_baseScore([docs[i]])
                    print("CVSS V3 score: " + str(pred_score))
                if assignVector:
                    vector = get_CVSSV3_Vector([docs[i]])
                    print("CVSS V3 vector: " + vector)

    sys.exit(0)




